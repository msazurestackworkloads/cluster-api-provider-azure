apiVersion: cluster.x-k8s.io/v1alpha3
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 192.168.0.0/16
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
    kind: KubeadmControlPlane
    name: ${CLUSTER_NAME}-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: AzureCluster
    name: ${CLUSTER_NAME}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: AzureCluster
metadata:
  name: ${CLUSTER_NAME}
spec:
  location: ${AZURE_LOCATION}
  networkSpec:
    vnet:
      name: ${CLUSTER_NAME}-vnet
  resourceGroup: ${CLUSTER_NAME}
  subscriptionID: ${AZURE_SUBSCRIPTION_ID}
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
kind: KubeadmControlPlane
metadata:
  name: ${CLUSTER_NAME}-control-plane
spec:
  infrastructureTemplate:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: AzureMachineTemplate
    name: ${CLUSTER_NAME}-control-plane
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-config: /etc/kubernetes/azure.json
          cloud-provider: azure
        extraVolumes:
        - hostPath: /etc/kubernetes/azure.json
          mountPath: /etc/kubernetes/azure.json
          name: cloud-config
          readOnly: true
        timeoutForControlPlane: 20m
      controllerManager:
        extraArgs:
          allocate-node-cidrs: "false"
          cloud-config: /etc/kubernetes/azure.json
          cloud-provider: azure
          cluster-name: ${CLUSTER_NAME}
        extraVolumes:
        - hostPath: /etc/kubernetes/azure.json
          mountPath: /etc/kubernetes/azure.json
          name: cloud-config
          readOnly: true
        - hostPath: /etc/kubernetes/azurestackcloud.json
          mountPath: /etc/kubernetes/azurestackcloud.json
          name: cloud-config-stack
          readOnly: true
        - hostPath: /etc/kubernetes/prekubeadmcommands.sh
          mountPath: /etc/kubernetes/prekubeadmcommands.sh
          name: prekubeadmcommands
          readOnly: true
        - hostPath: /etc/kubernetes/postkubeadmcommands.sh
          mountPath: /etc/kubernetes/postkubeadmcommands.sh
          name: postkubeadmcommands
          readOnly: true
      etcd:
        local:
          dataDir: /var/lib/etcddisk/etcd
    diskSetup:
      filesystems:
      - device: /dev/disk/azure/scsi1/lun0
        extraOpts:
        - -E
        - lazy_itable_init=1,lazy_journal_init=1
        filesystem: ext4
        label: etcd_disk
      - device: ephemeral0.1
        filesystem: ext4
        label: ephemeral0
        replaceFS: ntfs
      partitions:
      - device: /dev/disk/azure/scsi1/lun0
        layout: true
        overwrite: false
        tableType: gpt
    files:
    - content: |
        sudo cp /var/lib/waagent/Certificates.pem /usr/local/share/ca-certificates/azsCertificate.crt
        sudo update-ca-certificates
        sudo echo 'Environment=AZURE_ENVIRONMENT_FILEPATH=/etc/kubernetes/azurestackcloud.json' \ >> /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf
        sudo systemctl daemon-reload
        sudo systemctl restart kubelet
      owner: root:root
      path: /etc/kubernetes/prekubeadmcommands.sh
      permissions: "0644"
    - content: |
        sudo sed -i 's@imagePullPolicy: IfNotPresent@imagePullPolicy: IfNotPresent\n    env:\n    - name: AZURE_ENVIRONMENT_FILEPATH\n      value: \/etc\/kubernetes\/azurestackcloud.json@g' /etc/kubernetes/manifests/kube-controller-manager.yaml
      owner: root:root
      path: /etc/kubernetes/postkubeadmcommands.sh
      permissions: "0644"
    - content: |
        {
          "cloud": "${AZURE_ENVIRONMENT}",
          "tenantId": "${IDENTITY_TENANT_ID}",
          "subscriptionId": "${AZURE_SUBSCRIPTION_ID}",
          "aadClientId": "${AZURE_CLIENT_ID}",
          "aadClientSecret": "${AZURE_CLIENT_SECRET}",
          "resourceGroup": "${AZURE_RESOURCE_GROUP}",
          "securityGroupName": "${CLUSTER_NAME}-node-nsg",
          "location": "${AZURE_LOCATION}",
          "vmType": "vmss",
          "vnetName": "${CLUSTER_NAME}-vnet",
          "vnetResourceGroup": "${AZURE_RESOURCE_GROUP}",
          "subnetName": "${CLUSTER_NAME}-node-subnet",
          "routeTableName": "${CLUSTER_NAME}-node-routetable",
          "userAssignedID": "${CLUSTER_NAME}",
          "loadBalancerSku": "basic",
          "maximumLoadBalancerRuleCount": 250,
          "useManagedIdentityExtension": false,
          "useInstanceMetadata": false,
          "excludeMasterFromStandardLB": false,
          "primaryScaleSetName": "${CLUSTER_NAME}-mp-0"
        }
      owner: root:root
      path: /etc/kubernetes/azure.json
      permissions: "0644"
    - content: |
        {
          "name":"${AZURE_ENVIRONMENT}",
          "managementPortalURL":"https://portal.redmond.ext-n31r1203.masd.stbtest.microsoft.com/",
          "publishSettingsURL":"",
          "serviceManagementEndpoint":"https://management.adfs.n31r1203.masd.stbtest.microsoft.com/f4a7aab6-6167-41a9-abc0-1c925284411d",
          "resourceManagerEndpoint":"https://management.redmond.ext-n31r1203.masd.stbtest.microsoft.com/",
          "activeDirectoryEndpoint":"https://adfs.redmond.ext-n31r1203.masd.stbtest.microsoft.com/",
          "galleryEndpoint":"https://providers.n31r1203.masd.stbtest.microsoft.com:30016/",
          "keyVaultEndpoint":"",
          "graphEndpoint":"https://graph.redmond.ext-n31r1203.masd.stbtest.microsoft.com/",
          "serviceBusEndpoint":"",
          "batchManagementEndpoint":"",
          "storageEndpointSuffix":"redmond.ext-n31r1203.masd.stbtest.microsoft.com",
          "sqlDatabaseDNSSuffix":"",
          "trafficManagerDNSSuffix":"",
          "keyVaultDNSSuffix":"vault.redmond.ext-n31r1203.masd.stbtest.microsoft.com",
          "serviceBusEndpointSuffix":"",
          "serviceManagementVMDNSSuffix":"",
          "resourceManagerVMDNSSuffix":"cloudapp.ext-n31r1203.masd.stbtest.microsoft.com",
          "containerRegistryDNSSuffix":"",
          "cosmosDBDNSSuffix":"",
          "tokenAudience":"",
          "resourceIdentifiers":{"graph":"","keyVault":"","datalake":"","batch":"","operationalInsights":"","storage":""}
        }
      owner: root:root
      path: /etc/kubernetes/azurestackcloud.json
      permissions: "0644"
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-config: /etc/kubernetes/azure.json
          cloud-provider: azure
        name: '{{ ds.meta_data["local_hostname"] }}'
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-config: /etc/kubernetes/azure.json
          cloud-provider: azure
        name: '{{ ds.meta_data["local_hostname"] }}'
    mounts:
    - - LABEL=etcd_disk
      - /var/lib/etcddisk
    postKubeadmCommands:
    - echo 'loading post script'
    - sudo bash /etc/kubernetes/postkubeadmcommands.sh
    - echo 'finished loading post script'
    preKubeadmCommands:
    - echo 'loading pre script'
    - sudo bash /etc/kubernetes/prekubeadmcommands.sh
    - echo 'finished loading pre script'
    useExperimentalRetryJoin: true
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  version: ${KUBERNETES_VERSION}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: AzureMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-control-plane
spec:
  template:
    spec:
      dataDisks:
      - diskSizeGB: 256
        lun: 0
        nameSuffix: etcddisk
      image:
        marketplace:
          offer: Test
          publisher: AzureStack
          sku: capz-test-1804
          version: latest
      location: ${AZURE_LOCATION}
      osDisk:
        diskSizeGB: 128
        managedDisk:
          storageAccountType: Premium_LRS
        osType: Linux
      sshPublicKey: ${AZURE_SSH_PUBLIC_KEY}
      vmSize: ${AZURE_CONTROL_PLANE_MACHINE_TYPE}
---
apiVersion: exp.cluster.x-k8s.io/v1alpha3
kind: MachinePool
metadata:
  name: ${CLUSTER_NAME}-mp-0
spec:
  clusterName: ${CLUSTER_NAME}
  replicas: ${WORKER_MACHINE_COUNT}
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: KubeadmConfig
          name: ${CLUSTER_NAME}-mp-0
      clusterName: ${CLUSTER_NAME}
      infrastructureRef:
        apiVersion: exp.infrastructure.cluster.x-k8s.io/v1alpha3
        kind: AzureMachinePool
        name: ${CLUSTER_NAME}-mp-0
      version: ${KUBERNETES_VERSION}
---
apiVersion: exp.infrastructure.cluster.x-k8s.io/v1alpha3
kind: AzureMachinePool
metadata:
  name: ${CLUSTER_NAME}-mp-0
spec:
  location: ${AZURE_LOCATION}
  template:
    image:
      marketplace:
        offer: Test
        publisher: AzureStack
        sku: capz-test-1804
        version: latest
    osDisk:
      diskSizeGB: 30
      managedDisk:
        storageAccountType: Premium_LRS
      osType: Linux
    sshPublicKey: ${AZURE_SSH_PUBLIC_KEY}
    vmSize: ${AZURE_NODE_MACHINE_TYPE}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: KubeadmConfig
metadata:
  name: ${CLUSTER_NAME}-mp-0
spec:
  files:
  - content: |
      sudo cp /var/lib/waagent/Certificates.pem /usr/local/share/ca-certificates/azsCertificate.crt
      sudo update-ca-certificates
      sudo echo 'Environment=AZURE_ENVIRONMENT_FILEPATH=/etc/kubernetes/azurestackcloud.json' \ >> /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf
      sudo systemctl daemon-reload
      sudo systemctl restart kubelet
    owner: root:root
    path: /etc/kubernetes/prekubeadmcommands.sh
    permissions: "0644"
  - content: |
      sudo sed -i 's@imagePullPolicy: IfNotPresent@imagePullPolicy: IfNotPresent\n    env:\n    - name: AZURE_ENVIRONMENT_FILEPATH\n      value: \/etc\/kubernetes\/azurestackcloud.json@g' /etc/kubernetes/manifests/kube-controller-manager.yaml
    owner: root:root
    path: /etc/kubernetes/postkubeadmcommands.sh
    permissions: "0644"
  - content: |
      {
        "cloud": "${AZURE_ENVIRONMENT}",
        "tenantId": "${IDENTITY_TENANT_ID}",
        "subscriptionId": "${AZURE_SUBSCRIPTION_ID}",
        "aadClientId": "${AZURE_CLIENT_ID}",
        "aadClientSecret": "${AZURE_CLIENT_SECRET}",
        "resourceGroup": "${AZURE_RESOURCE_GROUP}",
        "securityGroupName": "${CLUSTER_NAME}-node-nsg",
        "location": "${AZURE_LOCATION}",
        "vmType": "vmss",
        "vnetName": "${CLUSTER_NAME}-vnet",
        "vnetResourceGroup": "${AZURE_RESOURCE_GROUP}",
        "subnetName": "${CLUSTER_NAME}-node-subnet",
        "routeTableName": "${CLUSTER_NAME}-node-routetable",
        "userAssignedID": "${CLUSTER_NAME}",
        "loadBalancerSku": "basic",
        "maximumLoadBalancerRuleCount": 250,
        "useManagedIdentityExtension": false,
        "useInstanceMetadata": false,
        "excludeMasterFromStandardLB": false,
        "primaryScaleSetName": "${CLUSTER_NAME}-mp-0"
      }
    owner: root:root
    path: /etc/kubernetes/azure.json
    permissions: "0644"
  - content: |
      {
        "name":"${AZURE_ENVIRONMENT}",
        "managementPortalURL":"https://portal.redmond.ext-n31r1203.masd.stbtest.microsoft.com/",
        "publishSettingsURL":"",
        "serviceManagementEndpoint":"https://management.adfs.n31r1203.masd.stbtest.microsoft.com/f4a7aab6-6167-41a9-abc0-1c925284411d",
        "resourceManagerEndpoint":"https://management.redmond.ext-n31r1203.masd.stbtest.microsoft.com/",
        "activeDirectoryEndpoint":"https://adfs.redmond.ext-n31r1203.masd.stbtest.microsoft.com/",
        "galleryEndpoint":"https://providers.n31r1203.masd.stbtest.microsoft.com:30016/",
        "keyVaultEndpoint":"",
        "graphEndpoint":"https://graph.redmond.ext-n31r1203.masd.stbtest.microsoft.com/",
        "serviceBusEndpoint":"",
        "batchManagementEndpoint":"",
        "storageEndpointSuffix":"redmond.ext-n31r1203.masd.stbtest.microsoft.com",
        "sqlDatabaseDNSSuffix":"",
        "trafficManagerDNSSuffix":"",
        "keyVaultDNSSuffix":"vault.redmond.ext-n31r1203.masd.stbtest.microsoft.com",
        "serviceBusEndpointSuffix":"",
        "serviceManagementVMDNSSuffix":"",
        "resourceManagerVMDNSSuffix":"cloudapp.ext-n31r1203.masd.stbtest.microsoft.com",
        "containerRegistryDNSSuffix":"",
        "cosmosDBDNSSuffix":"",
        "tokenAudience":"",
        "resourceIdentifiers":{"graph":"","keyVault":"","datalake":"","batch":"","operationalInsights":"","storage":""}
      }
    owner: root:root
    path: /etc/kubernetes/azurestackcloud.json
    permissions: "0644"
  joinConfiguration:
    nodeRegistration:
      kubeletExtraArgs:
        cloud-config: /etc/kubernetes/azure.json
        cloud-provider: azure
      name: '{{ ds.meta_data["local_hostname"] }}'
  postKubeadmCommands:
  - echo 'loading post script'
  - sudo bash /etc/kubernetes/postkubeadmcommands.sh
  - echo 'finished loading post script'
  preKubeadmCommands:
  - echo 'loading pre script'
  - sudo bash /etc/kubernetes/prekubeadmcommands.sh
  - echo 'finished loading pre script'
  useExperimentalRetryJoin: true